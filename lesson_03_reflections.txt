When would you want to use a remote repository rather than keeping all your work local?
- Whenever it is more than one contributers to the same repository

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- You don't want anything to happen with your files while you are working on then.
- Pull changes when you are ready

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- Fork: When you make a clone of a repository on GitHub.
  - Use when you want to modify/start off with a repository you don't control
- Clone: When you copy a repository either outside or form GitHub to an other computer
  - Use when you want to work with a repository an other place than where it currently are
- Branch: When you create/follow a different commit path than the master path
  - Use when you implement a new feature and want to keep the master clean of experiments.

What is the benefit of having a copy of the last known state of the remote stored locally?
- You can check if it local repository has changes after the last fetch

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- Email: Easy to understand whats going on. Harder to keep track of current version.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
- Branch:
  + Your master is always clean.
  + Easier to share changes across forks.
  - More tedious.
- Master:
  + Easiest way. No extras.
  - Your master is not clean.
  - Hard to share (pull requests) changes across repositories.
When to use what:
  Branch: When I work with others or need to keep a clean master.
  Master: When I work alone on something that don't demand a clean master.
